//
//  Spot+CoreDataProperties.swift
//  WorkHaven
//
//  Created by WorkHaven Team on 2024
//  Copyright Â© 2024 WorkHaven. All rights reserved.
//

import Foundation
import CoreData

/**
 * Spot+CoreDataProperties provides the Core Data property definitions
 * for the Spot entity. This file is automatically generated and should
 * not be manually modified.
 */
extension Spot {

    @nonobjc public class func fetchRequest() -> NSFetchRequest<Spot> {
        return NSFetchRequest<Spot>(entityName: "Spot")
    }

    /// The name of the work spot (e.g., "Starbucks", "Public Library")
    @NSManaged public var name: String
    
    /// The full address of the work spot
    @NSManaged public var address: String
    
    /// Latitude coordinate of the work spot
    @NSManaged public var latitude: Double
    
    /// Longitude coordinate of the work spot
    @NSManaged public var longitude: Double
    
    /// Overall WiFi rating for this spot (1-5 scale)
    @NSManaged public var wifiRating: Int16
    
    /// Overall noise level rating for this spot
    @NSManaged public var noiseRating: String
    
    /// Whether outlets/plugs are available at this spot
    @NSManaged public var outlets: Bool
    
    /// General tips and notes about this work spot
    @NSManaged public var tips: String
    
    /// Optional URL to a photo of the work spot
    @NSManaged public var photoURL: String?
    
    /// Timestamp of when this spot was last modified
    @NSManaged public var lastModified: Date
    
    /// Timestamp of when this spot was last seeded from discovery service
    @NSManaged public var lastSeeded: Date
    
    /// CloudKit record identifier for synchronization
    @NSManaged public var cloudKitRecordID: String
    
    /// One-to-many relationship to user ratings for this spot
    @NSManaged public var userRatings: NSSet?
    
    /// One-to-many relationship to photos for this spot
    @NSManaged public var photos: NSSet?
    
    /// One-to-many relationship to user tips for this spot
    @NSManaged public var userTips: NSSet?

}

// MARK: Generated accessors for userRatings
extension Spot {

    @objc(addUserRatingsObject:)
    @NSManaged public func addToUserRatings(_ value: UserRating)

    @objc(removeUserRatingsObject:)
    @NSManaged public func removeFromUserRatings(_ value: UserRating)

    @objc(addUserRatings:)
    @NSManaged public func addToUserRatings(_ values: NSSet)

    @objc(removeUserRatings:)
    @NSManaged public func removeFromUserRatings(_ values: NSSet)

}

// MARK: Generated accessors for photos
extension Spot {

    @objc(addPhotosObject:)
    @NSManaged public func addToPhotos(_ value: Photo)

    @objc(removePhotosObject:)
    @NSManaged public func removeFromPhotos(_ value: Photo)

    @objc(addPhotos:)
    @NSManaged public func addToPhotos(_ values: NSSet)

    @objc(removePhotos:)
    @NSManaged public func removeFromPhotos(_ values: NSSet)

}

// MARK: Generated accessors for userTips
extension Spot {

    @objc(addUserTipsObject:)
    @NSManaged public func addToUserTips(_ value: UserTip)

    @objc(removeUserTipsObject:)
    @NSManaged public func removeFromUserTips(_ value: UserTip)

    @objc(addUserTips:)
    @NSManaged public func addToUserTips(_ values: NSSet)

    @objc(removeUserTips:)
    @NSManaged public func removeFromUserTips(_ values: NSSet)

}

extension Spot : Identifiable {

}
